// 初学者向け：マップごとのアイテムボックス配置データ
// 各マップに配置されるアイテムボックスの初期設定

import type { マップアイテム配置 } from '../types/itemBox';

/**
 * 始まりの町のアイテムボックス配置
 * 初学者向け：最初の町で取得できるアイテム
 */
export const 始まりの町アイテム配置: マップアイテム配置 = {
  マップID: '始まりの町',
  アイテムボックス一覧: [
    {
      id: 'town-box-001',
      位置: { x: 3, y: 3 },
      タイプ: '通常',
      アイテムID: 1, // きずぐすり
      個数: 3,
      状態: '未開封',
      メッセージ: 'きずぐすりを3個見つけた！',
    },
    {
      id: 'town-box-002',
      位置: { x: 16, y: 9 },
      タイプ: '通常',
      アイテムID: 11, // モンスターボール
      個数: 5,
      状態: '未開封',
      メッセージ: 'モンスターボールを5個見つけた！',
    },
    {
      id: 'town-box-003',
      位置: { x: 6, y: 11 },
      タイプ: '隠し',
      アイテムID: 21, // げんきのかけら
      個数: 1,
      状態: '未開封',
      メッセージ: '隠されていたげんきのかけらを見つけた！',
    },
  ],
};

/**
 * 北の森のアイテムボックス配置
 * 初学者向け：森で取得できるアイテム
 */
export const 北の森アイテム配置: マップアイテム配置 = {
  マップID: '北の森',
  アイテムボックス一覧: [
    {
      id: 'forest-box-001',
      位置: { x: 5, y: 7 },
      タイプ: '通常',
      アイテムID: 2, // いいきずぐすり
      個数: 2,
      状態: '未開封',
      メッセージ: 'いいきずぐすりを2個見つけた！',
    },
    {
      id: 'forest-box-002',
      位置: { x: 15, y: 3 },
      タイプ: '通常',
      アイテムID: 41, // きのみ
      個数: 5,
      状態: '未開封',
      メッセージ: 'きのみを5個見つけた！',
    },
    {
      id: 'forest-box-003',
      位置: { x: 12, y: 10 },
      タイプ: 'レア',
      アイテムID: 12, // スーパーボール
      個数: 3,
      状態: '未開封',
      メッセージ: 'レアな箱からスーパーボールを3個見つけた！',
    },
  ],
};

/**
 * 全マップのアイテムボックス配置データ
 * 初学者向け：ゲーム内の全マップのアイテム配置を管理
 */
export const 全アイテムボックス配置: Record<string, マップアイテム配置> = {
  始まりの町: 始まりの町アイテム配置,
  北の森: 北の森アイテム配置,
  // 今後追加予定のマップ
  // '西の平原': 西の平原アイテム配置,
  // '東の山道': 東の山道アイテム配置,
  // '南の海岸': 南の海岸アイテム配置,
};

/**
 * マップIDからアイテムボックス配置を取得する関数
 * 初学者向け：指定したマップのアイテムボックス情報を取得
 */
export function マップアイテム配置取得(マップID: string): マップアイテム配置 | undefined {
  return 全アイテムボックス配置[マップID];
}

/**
 * アイテムボックスの表示アイコンを取得する関数
 * 初学者向け：アイテムボックスの種類に応じたアイコンを返す
 */
export function アイテムボックスアイコン取得(タイプ: string): string {
  switch (タイプ) {
    case '通常':
      return '📦';
    case 'レア':
      return '✨';
    case '隠し':
      return '🔍';
    case 'イベント':
      return '🎁';
    default:
      return '📦';
  }
}
